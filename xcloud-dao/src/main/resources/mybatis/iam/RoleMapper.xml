<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl4g.devops.dao.iam.RoleDao">
	<resultMap id="BaseResultMap" type="com.wl4g.components.core.bean.iam.Role">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="name_zh" property="nameZh" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="enable" property="enable" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_by" property="createBy" jdbcType="BIGINT" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="BIGINT" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />

		<!--other -->

	</resultMap>
	<sql id="Base_Column_List">
		id, role_code, name_zh, type, enable, status, create_by, create_date, update_by,
		update_date, del_flag
	</sql>
	<sql id="Base_Column_List_r">
		r.id, r.role_code, r.name_zh, r.type, r.enable, r.status, r.create_by, r.create_date, r.update_by,
		r.update_date, r.del_flag
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectWithRoot" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List_r" />
		from sys_role r
		left join sys_organization_role gr on r.id=gr.role_id
		where r.del_flag!=1
		<if test="groupIds != null and groupIds.size() > 0">
			and gr.organization_id in
			<foreach collection="groupIds" item="groupId" index="index" open="(" close=")" separator=",">
				#{groupId}
			</foreach>
		</if>
		<if test="roleCode != null and roleCode !='' ">
			AND role_code LIKE CONCAT('%','${roleCode}','%')
		</if>
		<if test="nameZh != null and nameZh !='' ">
			AND name_zh LIKE CONCAT('%','${nameZh}','%')
		</if>
	</select>

	<select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List_r" />
		from sys_role r
		left join sys_role_user ru on r.id=ru.role_id
		where r.del_flag!=1 and ru.user_id = #{userId,jdbcType=BIGINT}
	</select>

	<select id="selectByGroupId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List_r" />
		from sys_role r
		left join sys_organization_role gr on r.id=gr.role_id
		where r.del_flag!=1 and gr.organization_id = #{groupId,jdbcType=BIGINT}
	</select>

	<select id="selectByGroupIdsAndUserId" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List_r" />
		from sys_role r
		left join sys_role_user ru on r.id=ru.role_id
		left join sys_organization_role gr on r.id=gr.role_id
		where r.del_flag!=1
		<if test="groupIds != null and groupIds.size() > 0">
			and gr.organization_id in
			<foreach collection="groupIds" item="groupId" index="index" open="(" close=")" separator=",">
			#{groupId}
			</foreach>
		</if>
		<if test="userId != null and userId !='' ">
			and ru.user_id=#{userId}
		</if>
		<if test="roleCode != null and roleCode !='' ">
			AND r.role_code LIKE CONCAT('%','${roleCode}','%')
		</if>
		<if test="nameZh != null and nameZh !='' ">
			AND r.name_zh LIKE CONCAT('%','${nameZh}','%')
		</if>
	</select>

	<select id="list" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List_r" />
		from sys_role r
		left join sys_organization_role gr on r.id=gr.role_id
		where r.del_flag!=1

		<if test="groupIds != null and groupIds.size() > 0">
			and exists (select 1 from sys_organization_role gr where r.id=gr.role_id
			and gr.organization_id in
			<foreach collection="groupIds" item="groupId" index="index" open="(" close=")" separator=",">
				#{groupId}
			</foreach>
			)
		</if>

		<if test="roleCode != null and roleCode !='' ">
			AND r.role_code LIKE CONCAT('%','${roleCode}','%')
		</if>
		<if test="nameZh != null and nameZh !='' ">
			AND r.name_zh LIKE CONCAT('%','${nameZh}','%')
		</if>

	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_role
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.wl4g.components.core.bean.iam.Role">
		insert into sys_role (id, role_code, name_zh,
		type, enable, status,
		create_by,
		create_date, update_by,
		update_date, del_flag)
		values (#{id,jdbcType=BIGINT}, #{roleCode,jdbcType=VARCHAR},
		#{nameZh,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER}, #{enable,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
		#{createBy,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT},
		#{updateDate,jdbcType=TIMESTAMP},
		#{delFlag,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.wl4g.components.core.bean.iam.Role" useGeneratedKeys="true"
		keyProperty="id">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="nameZh != null">
				name_zh,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="enable != null">
				enable,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="nameZh != null">
				#{nameZh,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="enable != null">
				#{enable,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=BIGINT},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=BIGINT},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wl4g.components.core.bean.iam.Role">
		update sys_role
		<set>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="nameZh != null">
				name_zh = #{nameZh,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="enable != null">
				enable = #{enable,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=BIGINT},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=BIGINT},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wl4g.components.core.bean.iam.Role">
		update sys_role
		set role_code = #{roleCode,jdbcType=VARCHAR},
		name_zh = #{nameZh,jdbcType=VARCHAR},
		type = #{type,jdbcType=INTEGER},
		enable = #{enable,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		create_by = #{createBy,jdbcType=BIGINT},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_by =
		#{updateBy,jdbcType=BIGINT},
		update_date = #{updateDate,jdbcType=TIMESTAMP},
		del_flag = #{delFlag,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=BIGINT}
	</update>
</mapper>